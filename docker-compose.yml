services:
  # PostgreSQL Database
  db:
    image: postgres:14
    container_name: pg_container
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # pgAdmin
  pgadmin:
    image: dpage/pgadmin4:snapshot
    container_name: pgadmin_snapshot
    restart: always
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network

  # WhatsApp AI Bot
  whatsapp-bot:
    build: .
    container_name: whatsapp_ai_bot
    restart: always
    env_file:
      - .env
    environment:
      # Database connection - use container name
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      
      # WhatsApp API
      - WHATSAPP_TOKEN=${WHATSAPP_TOKEN:-dummy_token}
      - WHATSAPP_PHONE_NUMBER_ID=${WHATSAPP_PHONE_NUMBER_ID:-dummy_id}
      - WHATSAPP_VERIFY_TOKEN=${WHATSAPP_VERIFY_TOKEN:-dummy_verify}
      
      # Ollama
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
    ports:
      - "8081:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network
    volumes:
      - .:/app
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge